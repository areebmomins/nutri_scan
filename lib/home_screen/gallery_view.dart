import 'dart:io';

import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:google_mlkit_text_recognition/google_mlkit_text_recognition.dart';
import 'package:image_picker/image_picker.dart';
import 'package:nutri_scan/data/api/dio_client.dart';
import 'package:nutri_scan/home_screen/upload_image_bottom_sheet.dart';
import 'package:nutri_scan/result_screen/result_screen.dart';

import '../data/api/get_model.dart';
import '../data/api/response_model.dart';
import '../utils/loader.dart';
import '../utils/utils.dart';

class GalleryView extends StatefulWidget {
  GalleryView(
      {Key? key,
      required this.title,
      this.text,
      required this.onImage,
      required this.onDetectorViewModeChanged})
      : super(key: key);

  final String title;
  final String? text;
  final Function(InputImage inputImage) onImage;
  final Function()? onDetectorViewModeChanged;

  @override
  State<GalleryView> createState() => _GalleryViewState();
}

class _GalleryViewState extends State<GalleryView> {
  File? _image;
  String? _path;
  ImagePicker? _imagePicker;
  bool isLoading = false;

  @override
  void initState() {
    super.initState();

    _imagePicker = ImagePicker();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(body: _galleryBody());
  }

  Widget _galleryBody() {
    return Stack(
      fit: StackFit.expand,
      children: [
        Column(children: [
          const Spacer(),
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 24),
            child: InkWell(
              onTap: () {
                showUploadImageBottomSheet(
                  context,
                  () {
                    _getImage(ImageSource.gallery);
                  },
                  () {
                    _getImage(ImageSource.camera);
                  },
                );
              },
              child: Column(
                children: [
                  SizedBox(
                    height: 320,
                    width: double.infinity,
                    child: _image != null
                        ? Image.file(_image!)
                        : const Icon(
                            Icons.image,
                            size: 240,
                            color: Color(0xFFA095C1),
                          ),
                  ),
                  const SizedBox(height: 16),
                  const Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Text(
                        'Click here upload',
                        style: TextStyle(
                          fontSize: 16,
                          fontWeight: FontWeight.w500,
                        ),
                      ),
                      SizedBox(width: 4),
                      Icon(Icons.upload),
                    ],
                  ),
                ],
              ),
            ),
          ),
          const Spacer(),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            children: [
              // ElevatedButton(
              //   onPressed: () {
              //     callApi(context);
              //   },
              //   child: const Text(
              //     'Help me Decide',
              //     style: TextStyle(
              //       fontSize: 18,
              //     ),
              //   ),
              // ),
              ElevatedButton(
                onPressed: () async {
                  callApi(context);
                },
                child: const Text(
                  'Scan',
                  style: TextStyle(
                    fontSize: 18,
                  ),
                ),
              ),
            ],
          ),
          const SizedBox(height: 40),
        ]),
        Visibility(
          visible: isLoading,
          child: CustomLoader(),
        ),
      ],
    );
  }

  Future<void> callApi(BuildContext context) async {
    setState(() {
      isLoading = true;
    });

    Autogenerated? response =
        await DioClient.instance.getRecommendations(widget.text ?? '');

    setState(() {
      isLoading = false;
    });

    if (response != null) {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => ResultScreen(
            summary: response.response?.summary ?? '',
            unhealthy: response.response?.unhealthy ?? '',
            verdict: response.response?.verdict ?? '',
          ),
        ),
      );
    } else {
      Fluttertoast.showToast(msg: 'Something went wrong!');
    }
  }

  Future<void> callGetApi() async {
    setState(() {
      isLoading = true;
    });

    AutogeneratedGet? response = await DioClient.instance.getHttp();

    setState(() {
      isLoading = false;
    });

    if (response != null) {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => ResultScreen(
            summary: response.summary ?? '',
            unhealthy: response.ingredient ?? '',
            verdict: '',
          ),
        ),
      );
    } else {
      Fluttertoast.showToast(msg: 'Something went wrong!');
    }
  }

  Future _getImage(ImageSource source) async {
    setState(() {
      _image = null;
      _path = null;
    });
    final pickedFile = await _imagePicker?.pickImage(source: source);
    if (pickedFile != null) {
      _processFile(pickedFile.path);
    }
  }

  Future _processFile(String path) async {
    setState(() {
      _image = File(path);
    });
    _path = path;
    final inputImage = InputImage.fromFilePath(path);
    widget.onImage(inputImage);
  }
}
